{"version":3,"file":"floatingIcon.ts-CJpmuZwW.js","sources":["../../src/content/floatingIcon.ts"],"sourcesContent":["/**\n * floatingIcon.ts\n * \n * This content script adds a Grammarly-like floating icon that appears when text is selected.\n * When clicked, it opens a modal to save the selected text as a prompt.\n */\n\n// Interfaces for message passing\ninterface SavePromptRequest {\n  action: 'savePrompt';\n  title: string;\n  text: string;\n  folderId: string;\n}\n\ninterface CreateFolderRequest {\n  action: 'createFolder';\n  name: string;\n}\n\ninterface GetFoldersRequest {\n  action: 'getFolders';\n}\n\nlet floatingIcon: HTMLElement | null = null;\nlet modal: HTMLElement | null = null;\nlet currentSelection = '';\nlet folders: Array<{id: string, name: string}> = [];\nlet mousePosition = { x: 0, y: 0 };\nlet selectionDebounceTimer: number | null = null;\nlet isDarkMode: boolean = false;\nlet isFeatureEnabled: boolean = false; // Default to disabled until confirmed enabled via storage\n// Track the selection change listener for proper removal\nlet selectionChangeListener: EventListener | null = null;\n\n// Initialize the content script\nfunction init() {\n  console.log('Initializing floating icon script');\n  \n  // ALWAYS start by cleaning up, regardless of previous state\n  // This ensures we don't have any lingering elements or listeners\n  detachSelectionListeners();\n  removeFloatingIcon();\n  \n  // Check both storage and localStorage for feature state\n  // Using both ensures we catch any state that persisted across reloads\n  let featureEnabledLocalStorage = false;\n  try {\n    featureEnabledLocalStorage = localStorage.getItem('rcp_highlight_feature_enabled') === 'true';\n    console.log('Feature state from localStorage:', featureEnabledLocalStorage);\n  } catch (e) {\n    console.warn('Could not read from localStorage', e);\n  }\n  \n  // Priority: Chrome storage > localStorage\n  chrome.storage.local.get('textToPromptEnabled', (result) => {\n    // Explicitly check for true (not truthy)\n    isFeatureEnabled = result.textToPromptEnabled === true;\n    console.log('Text-to-prompt feature from storage:', isFeatureEnabled);\n    \n    // Update localStorage with current state from chrome storage\n    try {\n      localStorage.setItem('rcp_highlight_feature_enabled', isFeatureEnabled ? 'true' : 'false');\n    } catch (e) {\n      console.warn('Could not save to localStorage', e);\n    }\n    \n    // Only proceed with initialization if EXPLICITLY enabled\n    if (isFeatureEnabled === true) {\n      console.log('Feature explicitly enabled - attaching selection listeners');\n      attachSelectionListeners();\n    } else {\n      console.log('Feature disabled or undefined - ensuring complete cleanup');\n      // Perform thorough cleanup\n      detachSelectionListeners();\n      removeFloatingIcon();\n      \n      // Add a mutation observer to catch any dynamically created icons\n      setupMutationObserver();\n    }\n  });\n  \n  // If chrome storage fails or takes too long, default to localStorage value\n  setTimeout(() => {\n    if (isFeatureEnabled === undefined) {\n      console.log('Storage query timed out, falling back to localStorage value');\n      isFeatureEnabled = featureEnabledLocalStorage;\n      \n      if (!isFeatureEnabled) {\n        // Ensure cleanup if disabled\n        detachSelectionListeners();\n        removeFloatingIcon();\n      }\n    }\n  }, 1000);\n\n  // Check for dark mode preference\n  checkColorScheme();\n  \n  // Track mouse position\n  document.addEventListener('mousemove', (e) => {\n    mousePosition = { x: e.clientX, y: e.clientY };\n  });\n  \n  // Fetch folders immediately on initialization\n  chrome.runtime.sendMessage({ action: 'getFolders' }, (response) => {\n    if (response && response.folders) {\n      folders = response.folders;\n    }\n  });\n\n  // Set up a mutation observer to catch any dynamically created floating icons when disabled\nfunction setupMutationObserver() {\n  // Only set up observer if feature is disabled\n  if (isFeatureEnabled === false) {\n    console.log('Setting up mutation observer to catch any floating icons');\n    \n    // Create a mutation observer to watch for any dynamically added floating icons\n    const observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          // Check for our floating icon or any RCP elements\n          const addedNodes = Array.from(mutation.addedNodes);\n          for (const node of addedNodes) {\n            if (node instanceof HTMLElement) {\n              // Look for our floating icon or any RCP elements\n              if (node.id === 'rcp-floating-icon' || \n                  node.classList.contains('rcp-floating-icon') || \n                  node.querySelectorAll('#rcp-floating-icon, .rcp-floating-icon').length > 0) {\n                console.log('Found floating icon after feature disabled - removing');\n                if (node.id === 'rcp-floating-icon') {\n                  node.parentNode?.removeChild(node);\n                } else {\n                  // Remove any child elements that match\n                  const icons = node.querySelectorAll('#rcp-floating-icon, .rcp-floating-icon');\n                  icons.forEach(icon => icon.parentNode?.removeChild(icon));\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n    \n    // Start observing the document\n    observer.observe(document.body, { \n      childList: true, \n      subtree: true \n    });\n  }\n}\n\n// Listen for messages from the background script\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === 'foldersUpdated') {\n      // Update our local folders list when folders change\n      chrome.runtime.sendMessage({ action: 'getFolders' }, (response) => {\n        if (response && response.folders) {\n          folders = response.folders;\n        }\n      });\n    } else if (message.action === 'themeChanged') {\n      // Sync with extension's theme setting\n      isDarkMode = message.isDarkMode;\n      // Update modal if it's open\n      if (modal && modal.style.display === 'flex') {\n        updateModalTheme();\n      }\n    } else if (message.action === 'textToPromptToggled') {\n      // Update feature enabled state - log timestamp to track message ordering\n      const timestamp = message.timestamp || new Date().getTime();\n      console.log(`Received textToPromptToggled message (${timestamp}): ${message.enabled}`);\n      \n      isFeatureEnabled = message.enabled === true;\n      \n      // First perform complete cleanup regardless of previous state\n      console.log('Performing complete cleanup of floating icon feature');\n      detachSelectionListeners();\n      removeFloatingIcon();\n      \n      // Close modal if open\n      if (modal && modal.style.display === 'flex') {\n        hideModal();\n      }\n      \n      // Important: Store the current state in multiple locations to ensure it persists\n      // This helps with race conditions between messages and page reloads\n      try {\n        // Use localStorage for persistence across page reloads\n        localStorage.setItem('rcp_highlight_feature_enabled', isFeatureEnabled ? 'true' : 'false');\n        // Also store in sessionStorage for added redundancy\n        sessionStorage.setItem('rcp_highlight_feature_disabled_timestamp', String(Date.now()));\n        console.log('Saved feature state to storage:', isFeatureEnabled);\n      } catch (e) {\n        console.warn('Could not save to storage', e);\n      }\n      \n      // If turning off, also set up the mutation observer\n      if (!isFeatureEnabled) {\n        setupMutationObserver();\n      }\n      \n      // Send immediate response to confirm message was processed\n      sendResponse({ success: true, newState: isFeatureEnabled, timestamp });\n      \n      // Only if feature is now enabled, re-attach listeners\n      if (isFeatureEnabled) {\n        console.log('Re-attaching selection listeners for enabled feature');\n        attachSelectionListeners();\n        // Check for any current selection\n        processTextSelection();\n      } else {\n        console.log('Feature disabled, skipping listener attachment');\n      }\n    }\n  });\n\n  // Listen for color scheme changes\n  const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n  darkModeMediaQuery.addEventListener('change', () => {\n    checkColorScheme();\n    // Update modal if it's open\n    if (modal && modal.style.display === 'flex') {\n      updateModalTheme();\n    }\n  });\n\n  // Request the current theme from the extension\n  chrome.runtime.sendMessage({ action: 'getTheme' }, (response) => {\n    if (response && response.hasOwnProperty('isDarkMode')) {\n      isDarkMode = response.isDarkMode;\n    }\n  });\n\n  // Add CSS animations and styles\n  addGlobalStyles();\n}\n\n// Attach selection event listeners\nfunction attachSelectionListeners() {\n  console.log('Attaching selection event listeners');\n  \n  // First ensure we're not attaching duplicates\n  detachSelectionListeners();\n  \n  // Create and store selection change listener for later removal\n  selectionChangeListener = function() {\n    if (selectionDebounceTimer !== null) {\n      window.clearTimeout(selectionDebounceTimer);\n    }\n    selectionDebounceTimer = window.setTimeout(processTextSelection, 200);\n  };\n  \n  // Attach all listeners\n  document.addEventListener('mouseup', handleTextSelection);\n  document.addEventListener('keyup', handleTextSelection);\n  document.addEventListener('selectionchange', selectionChangeListener);\n}\n\n// Detach selection event listeners\nfunction detachSelectionListeners() {\n  console.log('Detaching selection event listeners');\n  \n  // Remove direct event listeners\n  document.removeEventListener('mouseup', handleTextSelection);\n  document.removeEventListener('keyup', handleTextSelection);\n  \n  // Remove the selectionchange listener properly\n  if (selectionChangeListener) {\n    document.removeEventListener('selectionchange', selectionChangeListener);\n    selectionChangeListener = null;\n  }\n  \n  // Clear any pending timeout\n  if (selectionDebounceTimer !== null) {\n    window.clearTimeout(selectionDebounceTimer);\n    selectionDebounceTimer = null;\n  }\n  \n  // Force current selection to be empty to prevent any lingering state\n  currentSelection = '';\n}\n\n// Check if the user prefers dark mode\nfunction checkColorScheme() {\n  isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n\n// Add global styles for animations and components\nfunction addGlobalStyles() {\n  const style = document.createElement('style');\n  style.textContent = `\n    @keyframes rcp-fade-in {\n      from { opacity: 0; }\n      to { opacity: 1; }\n    }\n    \n    @keyframes rcp-fade-out {\n      from { opacity: 1; }\n      to { opacity: 0; }\n    }\n\n    @keyframes rcp-spring-in {\n      0% { transform: scale(0.5) translateY(-20px); opacity: 0; }\n      60% { transform: scale(1.1); opacity: 1; }\n      80% { transform: scale(0.95); }\n      100% { transform: scale(1); }\n    }\n    \n    @keyframes rcp-spin {\n      0% { transform: rotate(0deg) scale(0.5); opacity: 0; }\n      70% { transform: rotate(555deg) scale(1.1); opacity: 1; }\n      85% { transform: rotate(540deg) scale(0.95); }\n      100% { transform: rotate(540deg) scale(1.0); }\n    }\n\n    .rcp-error-field {\n      border-color: #EF4444 !important;\n    }\n\n    .rcp-error-message {\n      color: #EF4444;\n      font-size: 12px;\n      margin-top: 4px;\n      display: block;\n    }\n\n    .rcp-btn-primary {\n      background-color: #EF4444;\n      color: white;\n      border: none;\n      border-radius: 8px;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n\n    .rcp-btn-primary:hover {\n      background-color: #DC2626;\n    }\n\n    .rcp-btn-secondary {\n      background-color: #E5E7EB;\n      color: #1F2937;\n      border: 1px solid #D1D5DB;\n      border-radius: 8px;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n\n    .rcp-btn-secondary:hover {\n      background-color: #D1D5DB;\n    }\n\n    .rcp-input {\n      width: 100%;\n      padding: 8px 12px;\n      border: 1px solid #D1D5DB;\n      border-radius: 8px;\n      font-size: 14px;\n      box-sizing: border-box;\n      transition: border-color 0.2s ease;\n      background-color: white;\n      color: #1F2937;\n    }\n\n    .rcp-input:focus {\n      outline: none;\n      border-color: #EF4444;\n      box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n    }\n    \n    .rcp-dark-mode .rcp-btn-primary {\n      background-color: #EF4444;\n      color: white;\n    }\n    \n    .rcp-dark-mode .rcp-btn-primary:hover {\n      background-color: #DC2626;\n    }\n    \n    .rcp-dark-mode .rcp-btn-secondary {\n      background-color: #333333;\n      border-color: #4B5563;\n      color: #D1D5DB;\n    }\n    \n    .rcp-dark-mode .rcp-btn-secondary:hover {\n      background-color: #4B5563;\n    }\n    \n    .rcp-dark-mode .rcp-input {\n      background-color: #202124;\n      border-color: #333333;\n      color: #E5E7EB;\n    }\n    \n    .rcp-dark-mode .rcp-input::placeholder {\n      color: #9CA3AF;\n    }\n    \n    .rcp-floating-svg {\n      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n      animation: rcp-spin 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n      transform-origin: center;\n      width: 48px;\n      height: 48px;\n    }\n  `;\n  document.head.appendChild(style);\n}\n\n// Handle text selection event with debouncing\nfunction handleTextSelection(_event: MouseEvent | KeyboardEvent) {\n  // If feature is disabled, force cleanup and return\n  if (!isFeatureEnabled) {\n    hideFloatingIcon();\n    return;\n  }\n\n  // Clear any existing timer\n  if (selectionDebounceTimer !== null) {\n    window.clearTimeout(selectionDebounceTimer);\n  }\n  \n  // Set a new timer to prevent multiple rapid updates\n  selectionDebounceTimer = window.setTimeout(() => {\n    processTextSelection();\n  }, 200);\n}\n\n// Process the actual text selection\nfunction processTextSelection() {\n  // If feature is disabled, force cleanup and exit\n  if (!isFeatureEnabled) {\n    hideFloatingIcon();\n    detachSelectionListeners(); // Explicitly detach listeners when disabled\n    return;\n  }\n\n  const selection = window.getSelection();\n  \n  // If nothing is selected or selection is empty, hide the floating icon\n  if (!selection || selection.toString().trim() === '') {\n    hideFloatingIcon();\n    return;\n  }\n  \n  // Get selected text\n  const selectedText = selection.toString().trim();\n  \n  // Only show the icon if we have a valid selection\n  if (selectedText.length > 0) {\n    currentSelection = selectedText;\n    // Show the floating icon near the mouse cursor\n    showFloatingIcon();\n  } else {\n    hideFloatingIcon();\n  }\n}\n\n// Show the floating icon near the mouse cursor\nfunction showFloatingIcon() {\n  // First check if feature is enabled - if not, don't show the icon at all\n  if (!isFeatureEnabled) {\n    console.log('Feature is disabled, not showing floating icon');\n    removeFloatingIcon();\n    return;\n  }\n  \n  // Check localStorage as well for added safety\n  try {\n    const localStorageState = localStorage.getItem('rcp_highlight_feature_enabled');\n    if (localStorageState === 'false') {\n      console.log('Feature disabled according to localStorage, not showing icon');\n      removeFloatingIcon();\n      return;\n    }\n  } catch (e) {\n    // Ignore localStorage errors\n  }\n  \n  // Hide any existing floating icon\n  hideFloatingIcon();\n  \n  // Create the floating icon if it doesn't exist\n  if (!floatingIcon) {\n    floatingIcon = document.createElement('div');\n    floatingIcon.id = 'rcp-floating-icon';\n    \n    // Use the RCP icon from rcpicon.svg - just the SVG, no background\n    floatingIcon.innerHTML = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" class=\"rcp-floating-svg\">\n        <!-- White outline around the whole logo (slightly larger) -->\n        <polygon points=\"100,36 155,68 155,132 100,164 45,132 45,68\" fill=\"none\" stroke=\"white\" stroke-width=\"4\" />\n        \n        <!-- White background inside hexagon -->\n        <polygon points=\"100,40 152,70 152,130 100,160 48,130 48,70\" fill=\"white\" />\n        \n        <!-- Outer node white outlines -->\n        <circle cx=\"100\" cy=\"40\" r=\"14\" fill=\"white\" stroke=\"white\" stroke-width=\"3\" />\n        <circle cx=\"152\" cy=\"70\" r=\"14\" fill=\"white\" stroke=\"white\" stroke-width=\"3\" />\n        <circle cx=\"152\" cy=\"130\" r=\"14\" fill=\"white\" stroke=\"white\" stroke-width=\"3\" />\n        <circle cx=\"100\" cy=\"160\" r=\"14\" fill=\"white\" stroke=\"white\" stroke-width=\"3\" />\n        <circle cx=\"48\" cy=\"130\" r=\"14\" fill=\"white\" stroke=\"white\" stroke-width=\"3\" />\n        <circle cx=\"48\" cy=\"70\" r=\"14\" fill=\"white\" stroke=\"white\" stroke-width=\"3\" />\n        \n        <!-- Lines connecting nodes to center -->\n        <line x1=\"100\" y1=\"100\" x2=\"100\" y2=\"40\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"100\" y1=\"100\" x2=\"100\" y2=\"160\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"100\" y1=\"100\" x2=\"152\" y2=\"70\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"100\" y1=\"100\" x2=\"152\" y2=\"130\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"100\" y1=\"100\" x2=\"48\" y2=\"70\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"100\" y1=\"100\" x2=\"48\" y2=\"130\" stroke=\"black\" stroke-width=\"5\" />\n        \n        <!-- Outer hexagon connections -->\n        <line x1=\"100\" y1=\"40\" x2=\"152\" y2=\"70\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"152\" y1=\"70\" x2=\"152\" y2=\"130\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"152\" y1=\"130\" x2=\"100\" y2=\"160\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"100\" y1=\"160\" x2=\"48\" y2=\"130\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"48\" y1=\"130\" x2=\"48\" y2=\"70\" stroke=\"black\" stroke-width=\"5\" />\n        <line x1=\"48\" y1=\"70\" x2=\"100\" y2=\"40\" stroke=\"black\" stroke-width=\"5\" />\n        \n        <!-- Outer nodes (black) -->\n        <circle cx=\"100\" cy=\"40\" r=\"12.5\" fill=\"black\" />\n        <circle cx=\"152\" cy=\"70\" r=\"12.5\" fill=\"black\" />\n        <circle cx=\"152\" cy=\"130\" r=\"12.5\" fill=\"black\" />\n        <circle cx=\"100\" cy=\"160\" r=\"12.5\" fill=\"black\" />\n        <circle cx=\"48\" cy=\"130\" r=\"12.5\" fill=\"black\" />\n        <circle cx=\"48\" cy=\"70\" r=\"12.5\" fill=\"black\" />\n        \n        <!-- Center node (red) -->\n        <circle cx=\"100\" cy=\"100\" r=\"14.5\" fill=\"#EF4444\" stroke=\"black\" stroke-width=\"5\" />\n      </svg>\n    `;\n    \n    // Add styles - only for positioning, no background or borders\n    floatingIcon.style.cssText = `\n      position: fixed;\n      z-index: 999999999;\n      display: block;\n      cursor: pointer;\n      user-select: none;\n      pointer-events: auto;\n    `;\n    \n    // Add hover effect to the SVG\n    floatingIcon.addEventListener('mouseenter', () => {\n      if (floatingIcon) {\n        const svg = floatingIcon.querySelector('.rcp-floating-svg');\n        if (svg) {\n          svg.classList.add('rcp-hover');\n          (svg as HTMLElement).style.transform = 'scale(1.1)';\n        }\n      }\n    });\n    \n    floatingIcon.addEventListener('mouseleave', () => {\n      if (floatingIcon) {\n        const svg = floatingIcon.querySelector('.rcp-floating-svg');\n        if (svg) {\n          svg.classList.remove('rcp-hover');\n          (svg as HTMLElement).style.transform = 'scale(1)';\n        }\n      }\n    });\n    \n    // Add click event to show the modal\n    floatingIcon.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      showModal();\n    });\n    \n    // Add to the document\n    document.body.appendChild(floatingIcon);\n  }\n\n  // Position the icon near the mouse cursor with adjustments to ensure it's visible\n  const iconSize = 48; // SVG size\n  const margin = 10;\n  \n  // Calculate position based on mouse position\n  let left = mousePosition.x + margin;\n  let top = mousePosition.y + margin;\n  \n  // Ensure the icon is fully visible within the viewport\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n  \n  if (left + iconSize > viewportWidth) {\n    left = mousePosition.x - iconSize - margin;\n  }\n  \n  if (top + iconSize > viewportHeight) {\n    top = mousePosition.y - iconSize - margin;\n  }\n  \n  // Adjust for scroll position\n  left += window.scrollX;\n  top += window.scrollY;\n  \n  // Set the position\n  floatingIcon.style.left = `${left}px`;\n  floatingIcon.style.top = `${top}px`;\n  \n  // Make the icon visible and restart animation\n  floatingIcon.style.display = 'block';\n  \n  // Reset animation\n  const svg = floatingIcon.querySelector('.rcp-floating-svg');\n  if (svg) {\n    svg.classList.remove('rcp-floating-svg');\n    void (svg as HTMLElement).offsetWidth; // Force reflow\n    svg.classList.add('rcp-floating-svg');\n  }\n  \n  // Add a global click listener to hide the icon when clicking elsewhere\n  setTimeout(() => {\n    document.addEventListener('click', hideOnClickOutside);\n    document.addEventListener('scroll', updateIconPosition);\n    window.addEventListener('resize', updateIconPosition);\n  }, 100);\n}\n\n// Update icon position on scroll or resize\nfunction updateIconPosition() {\n  if (floatingIcon && floatingIcon.style.display !== 'none') {\n    // Hide and show again to update position\n    hideFloatingIcon();\n    showFloatingIcon();\n  }\n}\n\n// Hide the floating icon when clicking outside\nfunction hideOnClickOutside(event: MouseEvent) {\n  if (floatingIcon && !floatingIcon.contains(event.target as Node)) {\n    hideFloatingIcon();\n  }\n}\n\n// Hide the floating icon\nfunction hideFloatingIcon() {\n  if (floatingIcon) {\n    floatingIcon.style.display = 'none';\n    \n    // Remove event listeners\n    document.removeEventListener('click', hideOnClickOutside);\n    document.removeEventListener('scroll', updateIconPosition);\n    window.removeEventListener('resize', updateIconPosition);\n  }\n}\n\n// Completely remove the floating icon from DOM\nfunction removeFloatingIcon() {\n  // First hide it\n  hideFloatingIcon();\n  \n  // Then remove it from the DOM entirely\n  if (floatingIcon && floatingIcon.parentNode) {\n    floatingIcon.parentNode.removeChild(floatingIcon);\n    floatingIcon = null;\n    console.log('Floating icon completely removed from DOM');\n  }\n  \n  // Also remove the modal if it exists\n  if (modal && modal.parentNode) {\n    modal.parentNode.removeChild(modal);\n    modal = null;\n    console.log('Modal completely removed from DOM');\n  }\n}\n\n// Validate form fields and show error messages\nfunction validateForm(): boolean {\n  let isValid = true;\n\n  // Validate title\n  const titleInput = document.getElementById('rcp-prompt-title') as HTMLInputElement;\n  const titleError = document.getElementById('rcp-title-error');\n  \n  if (!titleInput.value.trim()) {\n    titleInput.classList.add('rcp-error-field');\n    if (titleError) {\n      titleError.style.display = 'block';\n    }\n    isValid = false;\n  } else {\n    titleInput.classList.remove('rcp-error-field');\n    if (titleError) {\n      titleError.style.display = 'none';\n    }\n  }\n\n  // Validate folder selection\n  const folderSelect = document.getElementById('rcp-folder-select') as HTMLSelectElement;\n  const folderError = document.getElementById('rcp-folder-error');\n  const newFolderContainer = document.getElementById('rcp-new-folder-container');\n  const newFolderInput = document.getElementById('rcp-new-folder-name') as HTMLInputElement;\n  const newFolderError = document.getElementById('rcp-new-folder-error');\n  \n  // Check if folder is selected or we're creating a new one\n  const isNewFolderVisible = newFolderContainer && \n                           window.getComputedStyle(newFolderContainer).display !== 'none';\n  \n  if (!folderSelect.value && (!isNewFolderVisible || !newFolderInput.value.trim())) {\n    folderSelect.classList.add('rcp-error-field');\n    if (folderError) {\n      folderError.style.display = 'block';\n    }\n    \n    // If new folder is visible but empty, show error there too\n    if (isNewFolderVisible && !newFolderInput.value.trim()) {\n      newFolderInput.classList.add('rcp-error-field');\n      if (newFolderError) {\n        newFolderError.style.display = 'block';\n      }\n    }\n    \n    isValid = false;\n  } else {\n    folderSelect.classList.remove('rcp-error-field');\n    if (folderError) {\n      folderError.style.display = 'none';\n    }\n    \n    if (newFolderInput) {\n      newFolderInput.classList.remove('rcp-error-field');\n    }\n    if (newFolderError) {\n      newFolderError.style.display = 'none';\n    }\n  }\n\n  return isValid;\n}\n\n// Show the modal for saving the prompt\nfunction showModal() {\n  hideFloatingIcon();\n  \n  // Recheck color scheme in case it changed\n  checkColorScheme();\n  \n  // Create the modal if it doesn't exist\n  if (!modal) {\n    modal = document.createElement('div');\n    modal.id = 'rcp-modal';\n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 9999999999;\n      animation: rcp-fade-in 0.2s ease-in-out;\n    `;\n    \n    document.body.appendChild(modal);\n  }\n  \n  // Update the modal theme\n  updateModalTheme();\n  \n  // Show the modal\n  modal.style.display = 'flex';\n}\n\n// Update the modal theme based on current color scheme\nfunction updateModalTheme() {\n  if (!modal) return;\n  \n  // Set the modal content based on dark/light mode\n  const darkModeClass = isDarkMode ? 'rcp-dark-mode' : '';\n  \n  // Colors from the app's design system - matched exactly from the RCP interface\n  const backgroundColor = isDarkMode ? '#1A1A1A' : '#FFFFFF';\n  const borderColor = isDarkMode ? '#333333' : '#E5E7EB';\n  const textColor = isDarkMode ? '#E5E7EB' : '#111827';\n  const labelColor = isDarkMode ? '#D1D5DB' : '#374151';\n  const headerColor = isDarkMode ? '#FFFFFF' : '#111827';\n  const previewBgColor = isDarkMode ? '#202124' : '#F9FAFB';\n  const previewTextColor = isDarkMode ? '#D1D5DB' : '#4B5563';\n  const inputBgColor = isDarkMode ? '#202124' : '#FFFFFF';\n  const inputBorderColor = isDarkMode ? '#333333' : '#D1D5DB';\n  const secondaryBtnBgColor = isDarkMode ? '#333333' : '#E5E7EB';\n  const secondaryBtnTextColor = isDarkMode ? '#D1D5DB' : '#1F2937';\n  \n  modal.innerHTML = `\n    <div class=\"rcp-modal-container ${darkModeClass}\" style=\"\n      background-color: ${backgroundColor};\n      border-radius: 20px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);\n      width: 500px;\n      max-width: 90vw;\n      max-height: 90vh;\n      overflow: auto;\n      padding: 24px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n      color: ${textColor};\n      animation: rcp-fade-in 0.3s ease-out;\n    \">\n      <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; border-bottom: 1px solid ${borderColor}; padding-bottom: 12px;\">\n        <h2 style=\"margin: 0; font-size: 18px; font-weight: 600; color: ${headerColor};\">Save Prompt</h2>\n        <button id=\"rcp-modal-close\" style=\"\n          background: none;\n          border: none;\n          cursor: pointer;\n          font-size: 20px;\n          color: ${isDarkMode ? '#9CA3AF' : '#6B7280'};\n          padding: 4px 8px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 8px;\n          transition: background-color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"margin-bottom: 16px;\">\n        <label for=\"rcp-prompt-title\" style=\"display: block; margin-bottom: 6px; font-weight: 500; color: ${labelColor};\">Title <span style=\"color: #EF4444;\">*</span></label>\n        <input id=\"rcp-prompt-title\" type=\"text\" placeholder=\"Enter a title for your prompt\" class=\"rcp-input\" style=\"background-color: ${inputBgColor}; border-color: ${inputBorderColor};\">\n        <span id=\"rcp-title-error\" class=\"rcp-error-message\" style=\"display: none;\">Please enter a title for your prompt</span>\n      </div>\n      \n      <div style=\"margin-bottom: 16px;\">\n        <label for=\"rcp-folder-select\" style=\"display: block; margin-bottom: 6px; font-weight: 500; color: ${labelColor};\">Folder <span style=\"color: #EF4444;\">*</span></label>\n        <div style=\"display: flex; gap: 8px;\">\n          <select id=\"rcp-folder-select\" class=\"rcp-input\" style=\"flex: 1; background-color: ${inputBgColor}; border-color: ${inputBorderColor}; color: ${textColor};\">\n            <option value=\"\">Select a folder</option>\n            ${folders.map(folder => `<option value=\"${folder.id}\">${folder.name}</option>`).join('')}\n          </select>\n          <button id=\"rcp-new-folder-btn\" class=\"rcp-btn-secondary\" style=\"background-color: ${secondaryBtnBgColor}; color: ${secondaryBtnTextColor};\">New Folder</button>\n        </div>\n        <span id=\"rcp-folder-error\" class=\"rcp-error-message\" style=\"display: none;\">Please select a folder or create a new one</span>\n      </div>\n      \n      <div id=\"rcp-new-folder-container\" style=\"display: none; margin-bottom: 16px; padding: 12px; background-color: ${isDarkMode ? '#202124' : '#F9FAFB'}; border-radius: 8px; border-left: 3px solid #EF4444;\">\n        <label for=\"rcp-new-folder-name\" style=\"display: block; margin-bottom: 6px; font-weight: 500; color: ${labelColor};\">New Folder Name <span style=\"color: #EF4444;\">*</span></label>\n        <div style=\"display: flex; gap: 8px;\">\n          <input id=\"rcp-new-folder-name\" type=\"text\" placeholder=\"Enter folder name\" class=\"rcp-input\" style=\"flex: 1; background-color: ${inputBgColor}; border-color: ${inputBorderColor};\">\n          <button id=\"rcp-create-folder-btn\" class=\"rcp-btn-primary\">Create</button>\n        </div>\n        <span id=\"rcp-new-folder-error\" class=\"rcp-error-message\" style=\"display: none;\">Please enter a folder name</span>\n      </div>\n      \n      <div style=\"margin-bottom: 20px;\">\n        <label for=\"rcp-prompt-preview\" style=\"display: block; margin-bottom: 6px; font-weight: 500; color: ${labelColor};\">Preview</label>\n        <div id=\"rcp-prompt-preview\" style=\"\n          width: 100%;\n          min-height: 80px;\n          max-height: 200px;\n          padding: 12px;\n          border: 1px solid ${borderColor};\n          border-radius: 8px;\n          font-size: 14px;\n          line-height: 1.5;\n          overflow: auto;\n          background-color: ${previewBgColor};\n          white-space: pre-wrap;\n          box-sizing: border-box;\n          color: ${previewTextColor};\n        \">${currentSelection}</div>\n      </div>\n      \n      <div style=\"display: flex; justify-content: flex-end; gap: 12px; margin-top: 8px;\">\n        <button id=\"rcp-cancel-btn\" class=\"rcp-btn-secondary\" style=\"background-color: ${secondaryBtnBgColor}; color: ${secondaryBtnTextColor};\">Cancel</button>\n        <button id=\"rcp-save-btn\" class=\"rcp-btn-primary\">Save Prompt</button>\n      </div>\n    </div>\n  `;\n  \n  // Re-attach event listeners after updating HTML\n  setupModalEventListeners();\n}\n\n// Set up event listeners for the modal\nfunction setupModalEventListeners() {\n  // Close button\n  document.getElementById('rcp-modal-close')?.addEventListener('click', hideModal);\n  \n  // Cancel button\n  document.getElementById('rcp-cancel-btn')?.addEventListener('click', hideModal);\n  \n  // New folder button\n  document.getElementById('rcp-new-folder-btn')?.addEventListener('click', () => {\n    const newFolderContainer = document.getElementById('rcp-new-folder-container');\n    if (newFolderContainer) {\n      newFolderContainer.style.display = 'block';\n      \n      // Focus the input field\n      setTimeout(() => {\n        const newFolderInput = document.getElementById('rcp-new-folder-name') as HTMLInputElement;\n        if (newFolderInput) {\n          newFolderInput.focus();\n        }\n      }, 100);\n    }\n  });\n  \n  // Create folder button\n  document.getElementById('rcp-create-folder-btn')?.addEventListener('click', () => {\n    const newFolderInput = document.getElementById('rcp-new-folder-name') as HTMLInputElement;\n    const newFolderError = document.getElementById('rcp-new-folder-error');\n    const folderName = newFolderInput.value.trim();\n    \n    if (!folderName) {\n      newFolderInput.classList.add('rcp-error-field');\n      if (newFolderError) {\n        newFolderError.style.display = 'block';\n      }\n      return;\n    }\n    \n    newFolderInput.classList.remove('rcp-error-field');\n    if (newFolderError) {\n      newFolderError.style.display = 'none';\n    }\n    \n    // Send a message to create a new folder\n    chrome.runtime.sendMessage(\n      { action: 'createFolder', name: folderName } as CreateFolderRequest,\n      (response) => {\n        if (response && response.success) {\n          // Add the new folder to the dropdown\n          const folderSelect = document.getElementById('rcp-folder-select') as HTMLSelectElement;\n          const option = document.createElement('option');\n          option.value = response.folderId;\n          option.textContent = folderName;\n          folderSelect.appendChild(option);\n          \n          // Select the new folder\n          folderSelect.value = response.folderId;\n          \n          // Hide the new folder form\n          const newFolderContainer = document.getElementById('rcp-new-folder-container');\n          if (newFolderContainer) {\n            newFolderContainer.style.display = 'none';\n          }\n          \n          // Clear the input\n          newFolderInput.value = '';\n          \n          // Clear any folder selection errors\n          const folderError = document.getElementById('rcp-folder-error');\n          if (folderError) {\n            folderError.style.display = 'none';\n          }\n          folderSelect.classList.remove('rcp-error-field');\n        }\n      }\n    );\n  });\n  \n  // Save button\n  document.getElementById('rcp-save-btn')?.addEventListener('click', () => {\n    // Validate form\n    if (!validateForm()) {\n      return;\n    }\n    \n    const titleInput = document.getElementById('rcp-prompt-title') as HTMLInputElement;\n    const folderSelect = document.getElementById('rcp-folder-select') as HTMLSelectElement;\n    \n    const title = titleInput.value.trim();\n    const folderId = folderSelect.value;\n    \n    // Send a message to save the prompt\n    chrome.runtime.sendMessage(\n      {\n        action: 'savePrompt',\n        title,\n        text: currentSelection,\n        folderId\n      } as SavePromptRequest,\n      (response) => {\n        if (response && response.success) {\n          hideModal();\n          \n          // Show a success toast\n          showToast('Prompt saved successfully!');\n        } else if (response && response.error) {\n          // Show error toast\n          showToast(`Error: ${response.error}`, true);\n        }\n      }\n    );\n  });\n  \n  // Add input validation listeners\n  const titleInput = document.getElementById('rcp-prompt-title') as HTMLInputElement;\n  titleInput.addEventListener('input', () => {\n    if (titleInput.value.trim()) {\n      titleInput.classList.remove('rcp-error-field');\n      const titleError = document.getElementById('rcp-title-error');\n      if (titleError) {\n        titleError.style.display = 'none';\n      }\n    }\n  });\n  \n  const folderSelect = document.getElementById('rcp-folder-select') as HTMLSelectElement;\n  folderSelect.addEventListener('change', () => {\n    if (folderSelect.value) {\n      folderSelect.classList.remove('rcp-error-field');\n      const folderError = document.getElementById('rcp-folder-error');\n      if (folderError) {\n        folderError.style.display = 'none';\n      }\n    }\n  });\n  \n  // Focus on title input by default\n  setTimeout(() => {\n    const titleInput = document.getElementById('rcp-prompt-title') as HTMLInputElement;\n    if (titleInput) {\n      titleInput.focus();\n    }\n  }, 100);\n}\n\n// Hide the modal\nfunction hideModal() {\n  if (modal) {\n    modal.style.display = 'none';\n  }\n}\n\n// Show a toast notification\nfunction showToast(message: string, isError = false) {\n  // Recheck color scheme\n  checkColorScheme();\n  \n  const toast = document.createElement('div');\n  const bgColor = '#2D2D2D';\n  const borderColor = '#EF4444';\n  \n  toast.style.cssText = `\n    position: fixed;\n    top: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: ${bgColor};\n    color: white;\n    padding: 10px 16px;\n    border-radius: 8px;\n    border-left: 4px solid ${borderColor};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    z-index: 999999999;\n    min-width: 200px;\n    max-width: 80%;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    animation: rcp-fade-in 0.2s ease-in-out;\n  `;\n  \n  // Add icon\n  const icon = document.createElement('span');\n  if (isError) {\n    icon.innerHTML = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n        <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n      </svg>\n    `;\n  } else {\n    icon.innerHTML = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n        <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n      </svg>\n    `;\n  }\n  \n  const textSpan = document.createElement('span');\n  textSpan.textContent = message;\n  \n  toast.appendChild(icon);\n  toast.appendChild(textSpan);\n  document.body.appendChild(toast);\n  \n  // Remove the toast after 3 seconds with fade out animation\n  setTimeout(() => {\n    toast.style.opacity = '0';\n    toast.style.transform = 'translate(-50%, -10px)';\n    toast.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out';\n    \n    setTimeout(() => {\n      if (document.body.contains(toast)) {\n        document.body.removeChild(toast);\n      }\n    }, 300);\n  }, 3000);\n}\n\n// Initialize the script\n(function() {\n  // Start with most aggressive cleanup\n  const preInit = () => {\n    console.log('Pre-initialization cleanup');\n    // Immediately check if feature should be disabled\n    try {\n      if (localStorage.getItem('rcp_highlight_feature_enabled') === 'false') {\n        console.log('Feature known to be disabled, performing immediate cleanup');\n        // Remove any existing floating icons\n        const existingIcons = document.querySelectorAll('#rcp-floating-icon, .rcp-floating-icon');\n        existingIcons.forEach(icon => {\n          if (icon.parentNode) {\n            icon.parentNode.removeChild(icon);\n            console.log('Removed existing icon during pre-init');\n          }\n        });\n      }\n    } catch (e) {\n      // Ignore localStorage errors\n    }\n  };\n  \n  // Run immediate cleanup before actual initialization\n  preInit();\n  \n  // Then run full initialization\n  init();\n})(); "],"names":["floatingIcon","modal","currentSelection","folders","mousePosition","selectionDebounceTimer","isDarkMode","isFeatureEnabled","selectionChangeListener","init","detachSelectionListeners","removeFloatingIcon","featureEnabledLocalStorage","e","result","attachSelectionListeners","setupMutationObserver","checkColorScheme","response","mutations","_a","mutation","addedNodes","node","icon","message","sender","sendResponse","updateModalTheme","timestamp","hideModal","processTextSelection","addGlobalStyles","handleTextSelection","style","_event","hideFloatingIcon","selection","selectedText","showFloatingIcon","svg","showModal","iconSize","margin","left","top","viewportWidth","viewportHeight","hideOnClickOutside","updateIconPosition","event","validateForm","isValid","titleInput","titleError","folderSelect","folderError","newFolderContainer","newFolderInput","newFolderError","isNewFolderVisible","darkModeClass","backgroundColor","borderColor","textColor","labelColor","headerColor","previewBgColor","previewTextColor","inputBgColor","inputBorderColor","secondaryBtnBgColor","secondaryBtnTextColor","folder","setupModalEventListeners","_b","_c","_d","_e","folderName","option","title","folderId","showToast","isError","toast","bgColor","textSpan"],"mappings":"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"}